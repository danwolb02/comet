--- ../include/comet/graphics/renderer.hpp	(original)
+++ ../include/comet/graphics/renderer.hpp	(reformatted)
@@ -16,8 +16,8 @@
 
 	auto render(const VertexArray &vertex_array, const Shader &shader,
 				const Matrix4f &transformation_matrix,
-				const Matrix4f &view_matrix,
-				const Matrix4f &projection_matrix) -> void;
+				const Matrix4f &view_matrix, const Matrix4f &projection_matrix)
+	-> void;
 
   private:
 	const Window &window;
--- ../test/sandbox/source/main.cpp	(original)
+++ ../test/sandbox/source/main.cpp	(reformatted)
@@ -47,16 +47,17 @@
 	Matrix4f view_matrix(1);
 	view_matrix = view_matrix.translate(0, 0, -10);
 
-	while (!window.should_close())
-	{
+	while (!window.should_close()) {
 		window.update();
 
 		if (window.get_width() == 0 || window.get_height() == 0) continue;
 
-		Matrix4f projection_matrix = perspective((f32) window.get_width() / (f32) window.get_height(), 1.0472, 0.1, 100);
+		Matrix4f projection_matrix = perspective(
+		(f32) window.get_width() / (f32) window.get_height(), 1.0472, 0.1, 100);
 		transformation_matrix = transformation_matrix.rotate(0, 0.1, 0);
 
-		renderer.render(vertex_array, shader, transformation_matrix, view_matrix, projection_matrix);
+		renderer.render(vertex_array, shader, transformation_matrix,
+						view_matrix, projection_matrix);
 	}
 
 	return 0;
--- ../source/comet/graphics/renderer.cpp	(original)
+++ ../source/comet/graphics/renderer.cpp	(reformatted)
@@ -14,8 +14,9 @@
 }
 
 auto Renderer::render(const VertexArray &vertex_array, const Shader &shader,
-					  const Matrix4f &transformation_matrix, const Matrix4f &view_matrix,
-					const Matrix4f &projection_matrix) -> void
+					  const Matrix4f &transformation_matrix,
+					  const Matrix4f &view_matrix,
+					  const Matrix4f &projection_matrix) -> void
 {
 	// Orthographic, origin is top left
 	// Matrix4f projection_matrix = orthographic(0, window.get_width(),
@@ -25,7 +26,6 @@
 	// Matrix4f projection_matrix = orthographic(-((i32) window.get_width() /
 	// 2), window.get_width() / 2, window.get_height() / 2, -((i32)
 	// window.get_height() / 2), -5.0f, 5.0f);
-
 
 	GL_CALL(glViewport(0, 0, window.get_width(), window.get_height()));
 	GL_CALL(glClear(GL_COLOR_BUFFER_BIT));
